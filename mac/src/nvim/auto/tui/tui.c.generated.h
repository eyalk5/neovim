#ifndef DEFINE_FUNC_ATTRIBUTES
# define DEFINE_FUNC_ATTRIBUTES
#endif
#include "nvim/func_attr.h"
#undef DEFINE_FUNC_ATTRIBUTES
static size_t unibi_pre_fmt_str(TUIData *data, unsigned int unibi_index, char *buf, size_t len);
static void termname_set_event(void **argv);
static void terminfo_start(UI *ui);
static void terminfo_stop(UI *ui);
static void tui_terminal_start(UI *ui);
static void tui_terminal_after_startup(UI *ui) FUNC_ATTR_NONNULL_ALL;
static void tui_terminal_stop(UI *ui);
static void tui_stop(UI *ui);
static void tui_main(UIBridgeData *bridge, UI *ui);
static void tui_dummy_event(void **argv);
static void tui_scheduler(Event event, void *d);
static void sigcont_cb(SignalWatcher *watcher, int signum, void *data);
static void sigwinch_cb(SignalWatcher *watcher, int signum, void *data);
static _Bool attrs_differ(HlAttrs a1, HlAttrs a2);
static void update_attrs(UI *ui, HlAttrs attrs);
static void final_column_wrap(UI *ui);
static void print_cell(UI *ui, UCell *ptr);
static _Bool cheap_to_print(UI *ui, int row, int col, int next);
static void cursor_goto(UI *ui, int row, int col);
static void clear_region(UI *ui, int top, int bot, int left, int right);
static _Bool can_use_scroll(UI *ui);
static void set_scroll_region(UI *ui);
static void reset_scroll_region(UI *ui);
static void tui_resize(UI *ui, Integer width, Integer height);
static void tui_clear(UI *ui);
static void tui_eol_clear(UI *ui);
static void tui_cursor_goto(UI *ui, Integer row, Integer col);
static cursorentry_T decode_cursor_entry(Dictionary args);
static void tui_mode_info_set(UI *ui, _Bool guicursor_enabled, Array args);
static void tui_update_menu(UI *ui);
static void tui_busy_start(UI *ui);
static void tui_busy_stop(UI *ui);
static void tui_mouse_on(UI *ui);
static void tui_mouse_off(UI *ui);
static void tui_set_mode(UI *ui, ModeShape mode);
static void tui_mode_change(UI *ui, String mode, Integer mode_idx);
static void tui_set_scroll_region(UI *ui, Integer top, Integer bot, Integer left, Integer right);
static void tui_scroll(UI *ui, Integer count);
static void tui_highlight_set(UI *ui, HlAttrs attrs);
static void tui_put(UI *ui, String text);
static void tui_bell(UI *ui);
static void tui_visual_bell(UI *ui);
static void tui_update_fg(UI *ui, Integer fg);
static void tui_update_bg(UI *ui, Integer bg);
static void tui_update_sp(UI *ui, Integer sp);
static void tui_flush(UI *ui);
static void show_termcap_event(void **argv);
static void suspend_event(void **argv);
static void tui_suspend(UI *ui);
static void tui_set_title(UI *ui, String title);
static void tui_set_icon(UI *ui, String icon);
static void tui_option_set(UI *ui, String name, Object value);
static void tui_event(UI *ui, char *name, Array args, _Bool *args_consumed);
static void invalidate(UI *ui, int top, int bot, int left, int right);
static void update_size(UI *ui);
static void unibi_goto(UI *ui, int row, int col);
static void unibi_out(UI *ui, int unibi_index);
static void unibi_out_ext(UI *ui, int unibi_index);
static void out(void *ctx, const char *str, size_t len);
static void unibi_set_if_empty(unibi_term *ut, enum unibi_string str, const char *val);
static int unibi_find_ext_str(unibi_term *ut, const char *name);
static void patch_terminfo_bugs(TUIData *data, const char *term, const char *colorterm, long vte_version, _Bool konsole, _Bool iterm_env);
static void augment_terminfo(TUIData *data, const char *term, const char *colorterm, long vte_version, _Bool konsole, _Bool iterm_env);
static void flush_buf(UI *ui);
static const char *tui_get_stty_erase(void);
static const char *tui_tk_ti_getstr(const char *name, const char *value, void *data);
#include "nvim/func_attr.h"
